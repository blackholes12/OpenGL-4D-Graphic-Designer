#version 440

in float vs_distance;
in vec3 vs_color;

out vec4 fs_color;

uniform float iTime;
uniform int trailFadeType;

vec4 color4;
float duringTime;

vec3 gradientColor3;
vec3 colorGradient(float x)
{
if(x>64.f)
{
gradientColor3=vec3(1.f,0.f,1.f);
}
else if(x<=64.f&&x>8.f)
{
gradientColor3=mix(vec3(0.f,0.f,1.f),vec3(1.f,0.f,1.f),(x-8.f)/56.f);
}
else if(x<=8.f&&x>4.f)
{
gradientColor3=mix(vec3(0.f,1.f,1.f),vec3(0.f,0.f,1.f),(x-4.f)/4.f);
}
else if(x<=4.f&&x>0.f)
{
gradientColor3=mix(vec3(0.f,1.f,0.f),vec3(0.f,1.f,1.f),(x-0.f)/4.f);
}
else if(x<=0.f&&x>-4.f)
{
gradientColor3=mix(vec3(1.f,1.f,0.f),vec3(0.f,1.f,0.f),(x+4.f)/4.f);
}
else if(x<=-4.f&&x>-8.f)
{
gradientColor3=mix(vec3(1.f,0.f,0.f),vec3(1.f,1.f,0.f),(x+8.f)/4.f);
}
else if(x<=-8.f&&x>-64.f)
{
gradientColor3=mix(vec3(1.f,0.f,1.f),vec3(1.f,0.f,0.f),(x+64.f)/56.f);
}
else if(x<=-64.f)
{
gradientColor3=vec3(1.f,0.f,1.f);
}
return gradientColor3;
}

float fade(float time)
{
   if(trailFadeType==0)
   {
   if(time<=30.f)
   return (-log(time+0.01f)+0.000035f*time*time+0.030f*time+2.470f)/7.075f;
   else
   return 0.f;
   }
   else if(trailFadeType==1)
   {
   if(time<=30.f)
   return 1.f-time/30.f;
   else
   return 0.f;
   }
   else if(trailFadeType==2)
   {
   return 1.f;
   }
}

void main()
{
duringTime=iTime-vs_color.y;
color4=vec4(colorGradient(vs_distance),fade(duringTime));
fs_color = color4;
};