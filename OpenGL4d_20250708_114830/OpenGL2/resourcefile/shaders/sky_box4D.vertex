#version 440

layout (location = 0) in vec4 vertex_A;
layout (location = 1) in vec4 vertex_B;
layout (location = 2) in vec4 vertex_C;
layout (location = 3) in vec4 vertex_D;

layout (location = 4) in vec3 texcoord_A;
layout (location = 5) in vec3 texcoord_B;
layout (location = 6) in vec3 texcoord_C;
layout (location = 7) in vec3 texcoord_D;

layout (location = 8) in vec4 normal_A;
layout (location = 9) in vec4 normal_B;
layout (location = 10) in vec4 normal_C;
layout (location = 11) in vec4 normal_D;

layout (location = 12) in int id;

out vec4 vs_position;
out vec3 vs_texcoord;
out vec4 vs_normal;

uniform mat4 mesh4DMat,viewMat,projectionMat;
uniform vec4 translate4D;
uniform vec3 texScale;

vec4 pA=vec4(0.f),pB=vec4(0.f),pC=vec4(0.f),pD=vec4(0.f);
int line=0;
int i=0,vertexAmount=0;
vec4 col4=vec4(0.f);

vec4 relativePos0=vec4(0.f),relativePos=vec4(0.f),pos0=vec4(0.f);

float disA=0.f,disB=0.f,disC=0.f,disD=0.f;
vec3 vector3=vec3(0.f);
vec3 slice(vec3 A,vec3 B,vec3 C,vec3 D,float disA,float disB,float disC,float disD,int line)
{
switch(line)
{
case 2:vector3=mix(A,B,disA/(disA-disB));break;
case 3:vector3=mix(A,C,disA/(disA-disC));break;
case 4:vector3=mix(A,D,disA/(disA-disD));break;
case 6:vector3=mix(B,C,disB/(disB-disC));break;
case 8:vector3=mix(B,D,disB/(disB-disD));break;
case 12:vector3=mix(C,D,disC/(disC-disD));break;
}
return vector3;
}
vec4 vector4=vec4(0.f);
vec4 slice(vec4 A,vec4 B,vec4 C,vec4 D,float disA,float disB,float disC,float disD,int line)
{
switch(line)
{
case 2:vector4=mix(A,B,disA/(disA-disB));break;
case 3:vector4=mix(A,C,disA/(disA-disC));break;
case 4:vector4=mix(A,D,disA/(disA-disD));break;
case 6:vector4=mix(B,C,disB/(disB-disC));break;
case 8:vector4=mix(B,D,disB/(disB-disD));break;
case 12:vector4=mix(C,D,disC/(disC-disD));break;
}
return vector4;
}

void main()
{
relativePos0=translate4D;
pA=viewMat*(mesh4DMat *vertex_A+relativePos0);
pB=viewMat*(mesh4DMat *vertex_B+relativePos0);
pC=viewMat*(mesh4DMat *vertex_C+relativePos0);
pD=viewMat*(mesh4DMat *vertex_D+relativePos0);

disA=pA.w;
disB=pB.w;
disC=pC.w;
disD=pD.w;

if(disA>0.f)
{
   if(disB>0.f)
   {
      if(disC>0.f)
      {
         if(disD>0.f)
         {
            vertexAmount = 0;
         }
         else
         {
            if(id == 0) vertexAmount = 3, line = 4;
            else if(id == 1) vertexAmount = 3, line = 8;
            else if(id == 2) vertexAmount = 3, line = 12;
            else if(id == 3) vertexAmount = 3;
          

         }
      }
      else
      {
         if(disD>0.f)
         {
            if(id == 0) vertexAmount = 3, line = 12;
            else if(id == 1) vertexAmount = 3, line = 6;
            else if(id == 2) vertexAmount = 3, line = 3;
            else if(id == 3) vertexAmount = 3;
         }
         else
         {
            if(id == 0) vertexAmount = 4, line = 6;
            else if(id == 1) vertexAmount = 4, line = 3;
            else if(id == 2) vertexAmount = 4, line = 4;
            else if(id == 3) vertexAmount = 4, line = 8;
         }
      }
   }
   else
   {
      if(disC>0.f)
      {
         if(disD>0.f)
         {
            if(id == 0) vertexAmount = 3, line = 2;
            else if(id == 1) vertexAmount = 3, line = 6;
            else if(id == 2) vertexAmount = 3, line = 8;
            else if(id == 3) vertexAmount = 3;
         }
         else
         {
            if(id == 0) vertexAmount = 4, line = 4;
            else if(id == 1) vertexAmount = 4, line = 2;
            else if(id == 2) vertexAmount = 4, line = 6;
            else if(id == 3) vertexAmount = 4, line = 12;
         }
      }
      else
      {
         if(disD>0.f)
         {
            if(id == 0) vertexAmount = 4, line = 8;
            else if(id == 1) vertexAmount = 4, line = 2;
            else if(id == 2) vertexAmount = 4, line = 3;
            else if(id == 3) vertexAmount = 4, line = 12;
         }
         else
         {
            if(id == 0) vertexAmount = 3, line = 3;
            else if(id == 1) vertexAmount = 3, line = 4;
            else if(id == 2) vertexAmount = 3, line = 2;
            else if(id == 3) vertexAmount = 3;
         }
      }
   }
}
else
{
   if(disB>0.f)
   {
      if(disC>0.f)
      {
         if(disD>0.f)
         {
            if(id == 0) vertexAmount = 3, line = 2;
            else if(id == 1) vertexAmount = 3, line = 4;
            else if(id == 2) vertexAmount = 3, line = 3;
            else if(id == 3) vertexAmount = 3;
         }
         else
         {
            if(id == 0) vertexAmount = 4, line = 3;
            else if(id == 1) vertexAmount = 4, line = 2;
            else if(id == 2) vertexAmount = 4, line = 8;
            else if(id == 3) vertexAmount = 4, line = 12;
         }
      }
      else
      {
         if(disD>0.f)
         {
            if(id == 0) vertexAmount = 4, line = 6;
            else if(id == 1) vertexAmount = 4, line = 2;
            else if(id == 2) vertexAmount = 4, line = 4;
            else if(id == 3) vertexAmount = 4, line = 12;
         }
         else
         {
            if(id == 0) vertexAmount = 3, line = 8;
            else if(id == 1) vertexAmount = 3, line = 6;
            else if(id == 2) vertexAmount = 3, line = 2;
            else if(id == 3) vertexAmount = 3;
         }
      }
   }
   else
   {
      if(disC>0.f)
      {
         if(disD>0.f)
         {
            if(id == 0) vertexAmount = 4, line = 4;
            else if(id == 1) vertexAmount = 4, line = 3;
            else if(id == 2) vertexAmount = 4, line = 6;
            else if(id == 3) vertexAmount = 4, line = 8;
         }
         else
         {
            if(id == 0) vertexAmount = 3, line = 3;
            else if(id == 1) vertexAmount = 3, line = 6;
            else if(id == 2) vertexAmount = 3, line = 12;
            else if(id == 3) vertexAmount = 3;
         }
      }
      else
      {
         if(disD>0.f)
         {
            if(id == 0) vertexAmount = 3, line = 12;
            else if(id == 1) vertexAmount = 3, line = 8;
            else if(id == 2) vertexAmount = 3, line = 4;
            else if(id == 3) vertexAmount = 3;
         }
         else
         {
            vertexAmount = 0;
         }
      }
   }
}
if(vertexAmount!=0)
{
pos0=slice(pA,pB,pC,pD,disA,disB,disC,disD,line);
if(vertexAmount!=3||id!=3)
{
vs_texcoord=slice(texcoord_A,texcoord_B,texcoord_C,texcoord_D,disA,disB,disC,disD,line)*texScale;
vs_normal=normalize(transpose(inverse(mesh4DMat)) *slice(normal_A,normal_B,normal_C,normal_D,disA,disB,disC,disD,line));
}

vs_position=pos0*viewMat;
gl_Position = projectionMat * vec4(pos0.xyz, 1.f);
}
else
gl_Position =  vec4(0);
}